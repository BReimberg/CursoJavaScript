=========================================================================
                        *Variáveis e Tipos Primitivos*
=========================================================================

*Identificadores*
-------------------------------------------------------------------------
- Podem começar com letra, $ ou _ ;
- Não podem começar com números;
- É possível usar letras ou números;
- É possível usar acentos e símbolos;
- Não podem conter espaços;
- Não podem ser palavras reservadas;
-------------------------------------------------------------------------

*Dicas*
-------------------------------------------------------------------------
- Maiúsculas e minusculas fazem diferença;
- Escolher nomes coerentes para variáveis;
- Evitar se tornar um 'programador alfabeto' ou um 'programador contador';
-------------------------------------------------------------------------

*Data Type*
-------------------------------------------------------------------------
Number: 5 18 -12 0.5 -15.9 3.14 8.0;
'---> Infinity
'--->NaN
String: "Google" 'JavaScript' `Maria`; obs: número do cpf é uma string;
Boolean: True False;
Null: Nulo
Undefined:
Object: Array --> vetor;
Function:
-------------------------------------------------------------------------

*Comando Typeof*
-------------------------------------------------------------------------
var n = 200
undefined
n
200
typeof n
'number'
n = "Google"
'Google'
typeof n
'string'

typeof 6 ---> Literal
'number'
typeof 6.5
'number'
tyoeof "6.5"
'string'

typeof []
'object'
typeof {}
'object'
typeof function (){}
'function'
typeof undefined
'undefined'
typeof NaN
'number'
typeof infinity
'number'
typeof null
'object'

=========================================================================
                            *Tratamento de Dados* 
=========================================================================

*STRING P/ NÚMERO*
Number.parseInt(n) ---> Converter para números inteiros;
Number.parceFloat(n) ---> Converter para números com vírgula;
Number(n); ---> deixar para o sistema escolher se será número inteiro ou com vírgula;

*NÚMERO P/ STRING*
String(n);
n.toString;

var s = 'JavaScript' 
'eu estou aprendendo s' ---> Não faz interpolação;
'eu estou aprendendo' + s ---> Usa concatenação;
`eu estou aprendendo ${s}` ---> Usa template string;

*TEMPLATE STRING*
placeholder: ${};
Para utilizar ${variável} deve estar entre ` `; ---> `Bla bla bla ${}`;

*FORMATANDO STRINGS"
var s='JavaScript'
s.length ---> Quantos caracteres a string tem;
s.toUpperCase() ---> tudo para 'MAIÚSCULAS';
s.toLowerCase() ---> tudo para 'minúsculas';

*FORMATAÇÃO DE NÚMEROS*
var n1 = 1543.5
n1.toFixed(2)
RETORNA: '1543.50'

Trocar o ponto por vírgula
n1.toFixed(2).replace ('.', ',')
RETORNA: '1543,50'

Mostrar o valor em real 
n1.toLocaleString('pt-BR', {style:'currency', currency: 'BRL'})
RETORNA: 'R$ 1,543.50'
n1.toLocaleString('pt-BR', {style:'currency', currency: 'USD'})
RETORNA: 'US$ 1,543.50'
n1.toLocaleString('pt-BR', {style:'currency', currency: 'EUR'})
RETORNA: '€ 1.543,50'

=========================================================================
                            OPERADORES (PT1)
=========================================================================
---> Ordem de Precedência
()
**
* / %
+ -

-------------------------------------------------------------------------
Aritméticos: (+ - * / % **)

---> operadores binários
5+2 = 7
5-2 = 3
5*2 = 10
5/2 = 2.5
5%2 = 1 --> resto da divisão inteira
5**2 = 25 --> potência

-------------------------------------------------------------------------
Atribuição 

Atribuição Simple:
var a = 5 + 3 ---> 8
var b = a % 5 ---> 3
var c = 5 * b ** 2 ---> 45
var d = 10 - a / 2 ---> 6
var e = 6 * 2 / d ---> 2
var f = b % e + 4 / e ---> 3

Auto-Atribuição:
---> Se a variável receber ela mesma pode ser usado o modo SIMPLIFICADO; 
---> Se receber outra variável, exemplo x, não se usa o SIMPLIFICADO;

var n = 3
n = n + 4   ---> SIMPLIFICADO: n += 4
n = 7

n = 7
n = n - 5   ---> SIMPLIFICADO: n -= 5
n = 2 

n = 2
n = n * 4   ---> SIMPLIFICADO: n *= 4
n = 8

n = 8
n = n / 2   ---> SIMPLIFICADO: n /= 2
n = 4

n = 4 
n = n ** 2  ---> SIMPLIFICADO: n **= 2
n = 16

n = 16
n = n % 5   ---> SIMPLIFICADO: n %= 5
n = 1

Incremento:
var x = 5
x = x + 1 ---> x++
x = x - 1 ---> x--
OBS: se for ++x ou --x o resultado da operação vem antes;

=========================================================================
                            OPERADORES (PT2)
=========================================================================
Relacionais: Ordem é o que aparecer primeiro
> Maior
< Menor
>= Maior ou igual
<= Menor ou igual
== Igual
!= Diferente
=== Identico
!== Desigual Restrito

5 > 2 TRUE
7 < 4 FALSE
8 >= 8 TRUE
9 <= 7 FALSE
5 == 5 TRUE
4 != 4 FALSE

Identidade (igualdade restrita):
5 == 5 True
5 == '5' True
5 ==='5' False --> igualdade restrita;
5 === 5 True
-------------------------------------------------------------------------
Lógicos:
Ordem de Precedência: !, &&, ||

! --> Negação/Não --> operador unário
&& --> Conjunção / E lógico --> valor binário --> Os dois valores precisam ser verdadeiros para retornar True
|| --> Disjunção --> valor binário --> Basta um ser verdadeiro para retornar True

NEGAÇÃO:
! --> True -> False
! --> False -> True

CONJUNÇÃO:
True && True --> True
True && False --> False
False && True --> False
False && False --> False

DISJUNÇÃO:
True || True --> True
True || False --> True
False || True --> True
False || False --> False

EXEMPLOS:
idade >= 15 && idade <= 17 --> a idade está entre 15 e 17?
estado == 'RJ' || estado == 'SP' --> O estado é RJ ou SP?
salario > 1500 && sexo != 'M' --> O salário é acima de 1500 e não é homem?
-------------------------------------------------------------------------
Ternário: Três partes; junta 3 operandos;

?: --> dentro da mesma expressão; 

Teste ? True : False
media >= 7.0 ? "Aprovado" : "Reprovado"

var idade = 19
var res = idade >= 18 ? 'Maior' : 'Menor'